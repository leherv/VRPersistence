version: '3.7'

services:
  api:
    container_name: vrpersistence_api
    build: .
    ports:
      - ${VRPERSISTENCE_APIPORT}:5000
    environment:
      VRPERSISTENCE_CONNECTIONSTRINGS__DB: "${VRPERSISTENCE_CONNECTIONSTRINGS__DB}"
    networks:
      - vr
    depends_on:
      db:
        condition: service_healthy

  db:
    container_name: vrpersistence_db
    image: library/postgres:13.0
    ports:
      - ${VRPERSISTENCE_DBPORT}:5432
    volumes:
      - type: volume
        source: test
        target: /var/lib/postgresql/data
    environment:
      POSTGRES_DB: "${VRPERSISTENCE_DBNAME}"
      POSTGRES_USER: "${VRPERSISTENCE_DBUSERNAME}"
      POSTGRES_PASSWORD: "${VRPERSISTENCE_DBPASSWORD}"
    networks:
      - vr

    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${VRPERSISTENCE_DBUSERNAME}" ]
      interval: 10s
      timeout: 5s
      retries: 5
      
volumes:
  test:
    name: "${VRPERSISTENCE_DBVOLUMENAME}"
    
networks:
  vr:
    name: custom_vr